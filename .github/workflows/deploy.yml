
name: Terraform Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-session-name: gha-terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Init
        run: terraform -chdir=infra init

      # NEW: import pre-existing resources so Terraform tracks them
      - name: Import pre-existing resources (idempotent)
        run: |
          terraform -chdir=infra import aws_dynamodb_table.items serverless-api-platform-items || echo "table not found"
          terraform -chdir=infra import aws_iam_role.lambda_exec serverless-api-platform-lambda-role || echo "role not found"
          terraform -chdir=infra import aws_iam_role.events_to_logs serverless-api-platform-events-logs-role || echo "role not found"
          terraform -chdir=infra import aws_cloudwatch_log_group.lambda /aws/lambda/serverless-api-platform-fn || echo "log group not found"
          terraform -chdir=infra import aws_cloudwatch_log_group.eventbridge /aws/events/serverless-api-platform || echo "log group not found"

      - name: Apply (auto-approve)
        run: terraform -chdir=infra apply -auto-approve
